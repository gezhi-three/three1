package cn.gezhi.mapper;

import cn.gezhi.po.Users;
import cn.gezhi.po.UsersExample;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface UsersMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Thu Aug 16 11:44:26 CST 2018
     */
    int countByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Thu Aug 16 11:44:26 CST 2018
     */
    int deleteByExample(UsersExample example);

    /**
     * 根据ID删除一个用户
     *
     * @param usersId 用户编号
     * @return 受影响行数
     */
    int deleteByPrimaryKey(Integer usersId);

    /**
     * 新增一个用户
     *
     * @param record 用户对象
     * @return 受影响行数
     */
    int insert(Users record);

    /**
     *有选择性的增加部门信息,没有增加的为null
     * @param record 用户对象
     * @return 受影响行数
     */
    int insertSelective(Users record);

    /**
     * 查询所有的用户
     *
     * @param example 全部列
     * @return 用户集合
     */
    List<Users> selectByExample(UsersExample example);

    /**
     * 根据ID查询一个用户
     *
     * @param usersId 用户编号
     * @return 用户对象
     */
    Users selectByPrimaryKey(Integer usersId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Thu Aug 16 11:44:26 CST 2018
     */
    int updateByExampleSelective(@Param("record") Users record, @Param("example") UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table users
     *
     * @mbggenerated Thu Aug 16 11:44:26 CST 2018
     */
    int updateByExample(@Param("record") Users record, @Param("example") UsersExample example);

    /**
     * 有选择性的修改用户的休息,没有修改的信息保持不变
     *
     * @param record 用户对象
     * @return 受影响行数
     */
    int updateByPrimaryKeySelective(Users record);

    /**
     * 修改一个用户的信息,没有修改的信息默认为null;
     *
     * @param record 用户对象
     * @return 受影响行数
     */
    int updateByPrimaryKey(Users record);
}